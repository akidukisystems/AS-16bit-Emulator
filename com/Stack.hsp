
    if ( vbin_CPUmeirei_Main == 0x60 ) : { // PUSH

        vbin_CPUmeirei_Prm.1 = RBS ( vbin_CPUmeirei_Prm.0 && 0xF0, 4 )

        switch vbin_CPUmeirei_Prm.1
        case 0x01 // レジスタ
            if ( ( vint_CPUparam.0 && 0xF0 ) == 0x00 ) : { // パラメータ1の上位4bitが0x00の場合（汎用WORDレジスタ）

                vbin_CPUtmp.0 = fetchRegisterWg( vint_CPUparam.0 )

            }
            if ( ( vint_CPUparam.0 && 0xF0 ) == 0x10 ) : { // パラメータ1の上位4bitが0x01の場合（WORDセグメントレジスタ）

                vbin_CPUtmp.0 = fetchRegisterWs( vint_CPUparam.0 -0x10 )

            }
        swbreak
        case 0x02 // メモリ
            vbin_CPUtmp.0 = wpeek( emu_vbin_Memory, fetchRegisterWs(rDS) *0x10 + vint_CPUparam.0 )
        swbreak
        case 0x03 // レジスタp
            if ( ( vint_CPUparam.0 && 0xF0 ) == 0x00 ) : { // パラメータ1の上位4bitが0x00の場合（汎用WORDレジスタ）

                vbin_CPUtmp.1 = fetchRegisterWg( vint_CPUparam.0 )

            }
            if ( ( vint_CPUparam.0 && 0xF0 ) == 0x10 ) : { // パラメータ1の上位4bitが0x01の場合（WOEDセグメントレジスタ）

                vbin_CPUtmp.1 = fetchRegisterWg( vint_CPUparam.0 -0x10 )

            }
            vbin_CPUtmp.0 = wpeek( emu_vbin_Memory, fetchRegisterWs(rDS) *0x10 + vbin_CPUtmp.1 )
        swbreak
        case 0x04 // 即値
            vbin_CPUtmp.0 = vint_CPUparam.0
        swbreak
        swend

        vbin_CPUtmp.1 = fetchRegisterWg(rSP) -2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        wpoke emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP), vbin_CPUtmp.0

        return

    }

    if ( vbin_CPUmeirei_Main == 0x61 ) : { // POP

        vbin_CPUmeirei_Prm.1 = RBS ( vbin_CPUmeirei_Prm.0 && 0xF0, 4 )

        vbin_CPUtmp.0 = wpeek ( emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP) )
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) +2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        

        switch vbin_CPUmeirei_Prm.1
        case 0x01
            if ( ( vint_CPUparam.0 && 0xF0 ) == 0x00 ) : { 

                writeRegisterWg vint_CPUparam.0, vbin_CPUtmp.0

            }
            if ( ( vint_CPUparam.0 && 0xF0 ) == 0x10 ) : { 

                writeRegisterWs vint_CPUparam.0 -0x10, vbin_CPUtmp.0

            }
        swbreak
        case 0x02
            wpoke emu_vbin_Memory, fetchRegisterWs(rDS) *0x10 +vint_CPUparam.0, vbin_CPUtmp.0
        swbreak
        case 0x03
            if ( ( vint_CPUparam.0 && 0xF0 ) == 0x00 ) : { 

                vbin_CPUtmp.1 = fetchRegisterWg( vint_CPUparam.0 )

            }
            if ( ( vint_CPUparam.0 && 0xF0 ) == 0x10 ) : { 

                vbin_CPUtmp.1 = fetchRegisterWg( vint_CPUparam.0 -0x10 )

            }
            wpoke emu_vbin_Memory, fetchRegisterWs(rDS) *0x10 +vbin_CPUtmp.1, vbin_CPUtmp.0
        swbreak
        swend

        return

    }

    if ( vbin_CPUmeirei_Main == 0x62 ) : { // PUSHA
        
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) -2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        wpoke emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP), fetchRegisterWg(rAX)

        vbin_CPUtmp.1 = fetchRegisterWg(rSP) -2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        wpoke emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP), fetchRegisterWg(rCX)

        vbin_CPUtmp.1 = fetchRegisterWg(rSP) -2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        wpoke emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP), fetchRegisterWg(rDX)

        vbin_CPUtmp.1 = fetchRegisterWg(rSP) -2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        wpoke emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP), fetchRegisterWg(rBX)

        vbin_CPUtmp.1 = fetchRegisterWg(rSP) -2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        wpoke emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP), fetchRegisterWg(rSP)

        vbin_CPUtmp.1 = fetchRegisterWg(rSP) -2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        wpoke emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP), fetchRegisterWg(rBP)

        vbin_CPUtmp.1 = fetchRegisterWg(rSP) -2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        wpoke emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP), fetchRegisterWg(rSI)

        vbin_CPUtmp.1 = fetchRegisterWg(rSP) -2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        wpoke emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP), fetchRegisterWg(rDI)

        return

    }

    if ( vbin_CPUmeirei_Main == 0x63 ) : { // POPA

        writeRegisterWg rDI, wpeek ( emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP) )
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) +2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1

        writeRegisterWg rSI, wpeek ( emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP) )
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) +2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1

        writeRegisterWg rBP, wpeek ( emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP) )
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) +2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1

        writeRegisterWg rSP, wpeek ( emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP) )
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) +2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        
        writeRegisterWg rBX, wpeek ( emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP) )
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) +2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1

        writeRegisterWg rDX, wpeek ( emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP) )
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) +2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1

        writeRegisterWg rCX, wpeek ( emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP) )
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) +2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1

        writeRegisterWg rAX, wpeek ( emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP) )
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) +2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1

        return

    }

    if ( vbin_CPUmeirei_Main == 0x64 ) : { // PUSHF

        vbin_CPUtmp.1 = fetchRegisterWg(rSP) -2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1
        wpoke emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP), fetchRegisterWe(rFL)

        return

    }

    if ( vbin_CPUmeirei_Main == 0x65 ) : { // POPF

        writeRegisterWe rFL, wpeek ( emu_vbin_Memory, fetchRegisterWs(rSS) *0x10 + fetchRegisterWg(rSP) )
        vbin_CPUtmp.1 = fetchRegisterWg(rSP) +2
        checkDataW(vbin_CPUtmp.1)
        writeRegisterWg rSP, vbin_CPUtmp.1

        return

    }